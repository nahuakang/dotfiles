# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && . "$HOME/.fig/shell/zshrc.pre.zsh"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="robbyrussell"

# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
plugins=(
  git
  aws
  kubectl
  history-substring-search
  pyenv
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

####################
# tmux
####################
export EDITOR=nvim

####################
# Pyenv
####################
# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# export PIPENV_VERSION="$PYENV_ROOT/shims/python"

# eval "$(pyenv init -)"

####################
# Ruby & RBENV
####################
eval "$(rbenv init - zsh)"

####################
# Zig
####################
export PATH=$PATH:$HOME/zig

####################
# System Helpers
####################
if [ "$(command -v bat)" ]; then
  unalias -m 'cat'
  alias cat='bat -pp --theme="Nord"'
fi

if [ "$(command -v exa)" ]; then
    unalias -m 'll'
    unalias -m 'l'
    unalias -m 'la'
    unalias -m 'ls'
    alias ls='exa -G  --color auto --icons -a -s type'
    alias ll='exa -l --color always --icons -a -s type'
fi

####################
# Qonto Dev Env
####################
export QONTO_SRC_PATH=$HOME/projects/qonto
export CBS_SRC_PATH=$HOME/projects/qonto
# export DATA_SRC_PATH=$HOME/Dev/data
export DEVOPS_SRC_PATH=$HOME/projects/devops

export AWS_SDK_LOAD_CONFIG=1
export PATH="$(python3 -m site --user-base)/bin:$PATH"
export GOPRIVATE=gitlab.qonto.co

alias docker-compose=docker-compose-v1
alias dc=docker-compose-v1
alias dcrun="dc run ${${PWD##*/}##qonto-}"
alias onelogin='onelogin-aws-assume-role --onelogin-username nahua.kang@qonto.com --client_id d8fa456813757a4c4fa78fe27d158b7fb17cc63f664adb55b751ad3a54029d04 --client_secret 192544b1a8e6e52aa77a619099ffd09fc2e8d9bc3a1a734484dbc74cb9f3dd8b --region eu --onelogin-app-id 387536 --onelogin-subdomain qonto --profile default --aws-region eu-west-3 --aws-account-id 674764870074 --aws-role-name qonto-team-augmentedfinances --duration 43200'

alias deva="devenv_activate"
alias devd="devenv_deactivate"
alias devs="cat /tmp/devenv_status"
alias nproc="sysctl -n hw.logicalcpu"

source "$QONTO_SRC_PATH/devenv/activate"

deva > /tmp/devenv_status 2>&1

####################
# Kubectl Duplicate Function
####################

kcnb() {
  context=$1
  branch=$2
  kubectx $context && kubens $branch
}

kube() {
  cmd=$1
  context=$2
  branch=$3
  app=$4
  current_branch=$(kubens -c)
  current_context=$(kubectx -c)
  kcnb $context $branch
  pod=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}' | grep "^$app-" | head -n 1)
  case $1 in
  'exec')
    kubectl exec -it $pod -- bash
    ;;
  'pod' | 'pods')
    if [ "$4" != "" ]; then
      kubectl get pods | grep "^$app"
    else
      kubectl get pods
    fi
    ;;
  'desc' | 'describe')
    kubectl describe pod $pod
    ;;
  'log' | 'logs')
    kubectl logs $pod --all-containers --since=30m | grep -v /checks/health
    ;;
  'sql' | 'psql')
    kubectl exec -it $pod -- sh -c 'psql postgres://$DB_USERNAME:$DB_PASSWORD@$DB_HOST/$DB_NAME'
    ;;
  'rc' | 'rails')
    kubectl exec -it $pod -- bundle exec rails c
    ;;
  'token')
    role=$5
    if [ "$5" = "" ]; then
      role="admin"
    fi
    kubectl exec -it $pod -- bundle exec rails runner "current_user = User.find_by(email: '$role@qonto.eu'); json_web_token = JsonWebToken.new(Rails.application.secrets.secret_key_base, Rails.application.secrets.public_key_base, 999.years); json_web_token = json_web_token.encode(uid: current_user.id, email: current_user.email, device_id: current_user.devices.first.id, visit_token: 'foobar'); puts json_web_token[:token]"
    ;;
  *)
    echo "unknown command: $cmd"
    ;;
  esac
}

####################
# Kubectl aliases
####################
[ -f ~/.kubectl_aliases ] && source ~/.kubectl_aliases

####################
# Fzf search
####################
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

###################
# FIG post block. Keep at the bottom of this file.
###################
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && . "$HOME/.fig/shell/zshrc.post.zsh"

###################
# STARSHIP
###################
eval "$(starship init zsh)"

typeset -U path
